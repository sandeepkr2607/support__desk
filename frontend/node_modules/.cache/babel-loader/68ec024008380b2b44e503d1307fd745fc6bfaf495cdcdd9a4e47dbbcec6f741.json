{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport ticketService from './ticketService';\n\n// creating the initial state like a object to store it into redux\nconst initialState = {\n  tickets: [],\n  ticket: {},\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n// create new ticket\nexport const createTicket = createAsyncThunk('tickets/create', async (ticketData, thunkAPI) => {\n  try {\n    // thunkApi is kind of object which store the various data e.g \n    const token = thunkAPI.getState().auth.user.token;\n    return await ticketService.createTicket(ticketData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n// Get user Ticket\nexport const getTickets = createAsyncThunk('tickets/getAll', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    console.log(token);\n    return await ticketService.getTickets(token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get single user Ticket\nexport const getTicket = createAsyncThunk('tickets/get', async (ticketId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    console.log(token);\n    return await ticketService.getTicket(ticketId, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n//  close the  Ticket\nexport const closeTicket = createAsyncThunk('tickets/close', async (ticketId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    // console.log(token);\n    return await ticketService.closeTicket(ticketId, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const ticketSlice = createSlice({\n  name: 'ticket',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(createTicket.pending, state => {\n      state.isLoading = true;\n    }).addCase(createTicket.fulfilled, state => {\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(createTicket.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    })\n    // get tickets\n    .addCase(getTickets.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTickets.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.tickets = action.payload;\n    }).addCase(getTickets.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    })\n    // get ticket\n    .addCase(getTicket.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTicket.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.ticket = action.payload;\n    }).addCase(getTicket.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    })\n    // close ticket\n    .addCase(closeTicket.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.ticket.map(ticket => ticket._id === action.payload._id ? ticket.status = 'close' : ticket);\n    });\n  }\n});\nexport const {\n  reset\n} = ticketSlice.actions;\nexport default ticketSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","ticketService","initialState","tickets","ticket","isError","isSuccess","isLoading","message","createTicket","ticketData","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","getTickets","_","console","log","getTicket","ticketId","closeTicket","ticketSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","rejected","action","payload","map","_id","status","actions","reducer"],"sources":["C:/Users/sandeep singh/Desktop/MY PROJECTS/support-desk/frontend/src/features/tickets/ticketSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport ticketService from './ticketService'\n\n// creating the initial state like a object to store it into redux\nconst initialState = {\n    tickets: [],\n    ticket: {},\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: ''\n}\n// create new ticket\nexport const createTicket = createAsyncThunk(\n    'tickets/create',\n    async (ticketData, thunkAPI) => {\n        try {\n            // thunkApi is kind of object which store the various data e.g \n            const token = thunkAPI.getState().auth.user.token\n            return await ticketService.createTicket(ticketData, token)\n\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n// Get user Ticket\nexport const getTickets = createAsyncThunk(\n    'tickets/getAll',\n    async (_, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().auth.user.token\n            console.log(token);\n            return await ticketService.getTickets(token)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n// Get single user Ticket\nexport const getTicket = createAsyncThunk(\n    'tickets/get',\n    async (ticketId, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().auth.user.token\n            console.log(token);\n            return await ticketService.getTicket(ticketId, token)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n//  close the  Ticket\nexport const closeTicket = createAsyncThunk(\n    'tickets/close',\n    async (ticketId, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().auth.user.token\n            // console.log(token);\n            return await ticketService.closeTicket(ticketId, token)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const ticketSlice = createSlice({\n    name: 'ticket',\n    initialState,\n    reducers: {\n        reset: (state) => initialState\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(createTicket.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(createTicket.fulfilled, (state) => {\n                state.isLoading = false\n                state.isSuccess = true\n            })\n            .addCase(createTicket.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n            // get tickets\n            .addCase(getTickets.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(getTickets.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.tickets = action.payload\n            })\n            .addCase(getTickets.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n            // get ticket\n            .addCase(getTicket.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(getTicket.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.ticket = action.payload\n            })\n            .addCase(getTicket.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n            // close ticket\n\n            .addCase(closeTicket.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.ticket.map((ticket) => ticket._id === action.payload._id ? (ticket.status = 'close') : ticket)\n            })\n\n    }\n})\n\nexport const { reset } = ticketSlice.actions\nexport default ticketSlice.reducer\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}