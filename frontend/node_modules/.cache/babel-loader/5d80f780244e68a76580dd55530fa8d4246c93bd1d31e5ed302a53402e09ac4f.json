{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/tickets/';\n\n//  create new ticket\nconst createTicket = async (ticketData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, ticketData, config);\n  return response.data;\n};\n\n//  get user ticket\nconst getTickets = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL, config);\n  return response.data;\n};\n\n//  get single user ticket\nconst getTicket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + ticketId, config);\n  return response.data;\n};\n\n//  close ticket\nconst closeTicket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.put(API_URL + ticketId, {\n    status: 'close'\n  }, config);\n  return response.data;\n};\nconst ticketService = {\n  createTicket,\n  getTickets,\n  getTicket,\n  closeTicket\n};\nexport default ticketService;","map":{"version":3,"names":["axios","API_URL","createTicket","ticketData","token","config","headers","Authorization","response","post","data","getTickets","get","getTicket","ticketId","closeTicket","put","status","ticketService"],"sources":["C:/Users/sandeep singh/Desktop/support_desk-support_desk/support_desk-support_desk/frontend/src/features/tickets/ticketService.js"],"sourcesContent":["import axios from 'axios'\n\nconst API_URL = '/api/tickets/'\n\n//  create new ticket\nconst createTicket = async (ticketData, token) => {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    const response = await axios.post(API_URL, ticketData, config)\n    return response.data\n}\n\n//  get user ticket\nconst getTickets = async (token) => {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    const response = await axios.get(API_URL, config)\n    return response.data\n}\n\n//  get single user ticket\nconst getTicket = async (ticketId, token) => {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    const response = await axios.get(API_URL + ticketId, config)\n    return response.data\n}\n\n//  close ticket\nconst closeTicket = async (ticketId, token) => {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    const response = await axios.put(API_URL + ticketId, { status: 'close' }, config)\n    return response.data\n}\n\nconst ticketService = {\n    createTicket, getTickets, getTicket,\n    closeTicket,\n}\nexport default ticketService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,eAAe;;AAE/B;AACA,MAAMC,YAAY,GAAG,OAAOC,UAAU,EAAEC,KAAK,KAAK;EAC9C,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAACR,OAAO,EAAEE,UAAU,EAAEE,MAAM,CAAC;EAC9D,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG,MAAOP,KAAK,IAAK;EAChC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,EAAEI,MAAM,CAAC;EACjD,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,MAAMG,SAAS,GAAG,OAAOC,QAAQ,EAAEV,KAAK,KAAK;EACzC,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,GAAGa,QAAQ,EAAET,MAAM,CAAC;EAC5D,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,MAAMK,WAAW,GAAG,OAAOD,QAAQ,EAAEV,KAAK,KAAK;EAC3C,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,KAAM;IACnC;EACJ,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACgB,GAAG,CAACf,OAAO,GAAGa,QAAQ,EAAE;IAAEG,MAAM,EAAE;EAAQ,CAAC,EAAEZ,MAAM,CAAC;EACjF,OAAOG,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,MAAMQ,aAAa,GAAG;EAClBhB,YAAY;EAAES,UAAU;EAAEE,SAAS;EACnCE;AACJ,CAAC;AACD,eAAeG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}