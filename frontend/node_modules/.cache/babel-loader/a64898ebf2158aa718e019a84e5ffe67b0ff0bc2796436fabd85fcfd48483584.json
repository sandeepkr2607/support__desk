{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const useAuthStatus = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkingStatus, setCheckingStatus] = useState(true);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (user) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n    setCheckingStatus(false);\n  }, [user]);\n  return {\n    loggedIn,\n    checkingStatus\n  };\n};\n_s(useAuthStatus, \"GvyLOpeAQPosHbIyqPBjAsJTuHA=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useState","useEffect","useSelector","useAuthStatus","loggedIn","setLoggedIn","checkingStatus","setCheckingStatus","user","state","auth"],"sources":["C:/Users/sandeep singh/Desktop/MY PROJECTS/support-desk/frontend/src/hooks/useAuthStatus.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const useAuthStatus = () => {\n    const [loggedIn, setLoggedIn] = useState(false)\n    const [checkingStatus, setCheckingStatus] = useState(true)\n\n    const { user } = useSelector((state) => state.auth)\n    useEffect(() => {\n        if (user) {\n            setLoggedIn(true)\n\n        } else {\n            setLoggedIn(false)\n        }\n        setCheckingStatus(false)\n\n    }, [user])\n    return { loggedIn, checkingStatus }\n\n\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM;IAAEQ;EAAK,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACnDT,SAAS,CAAC,MAAM;IACZ,IAAIO,IAAI,EAAE;MACNH,WAAW,CAAC,IAAI,CAAC;IAErB,CAAC,MAAM;MACHA,WAAW,CAAC,KAAK,CAAC;IACtB;IACAE,iBAAiB,CAAC,KAAK,CAAC;EAE5B,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EACV,OAAO;IAAEJ,QAAQ;IAAEE;EAAe,CAAC;AAGvC,CAAC;AAAA,GAlBYH,aAAa;EAAA,QAILD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}