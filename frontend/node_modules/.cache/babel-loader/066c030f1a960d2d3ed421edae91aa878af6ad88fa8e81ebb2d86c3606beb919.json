{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport noteService from './noteService';\nconst initialState = {\n  notes: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\n\n// Get Ticket notes\nexport const getNotes = createAsyncThunk('notes/getAll', async (ticketId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    // console.log(token);\n    return await noteService.getNotes(ticketId, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// create Ticket notes\nexport const createNotes = createAsyncThunk('notes/create', async (_ref, thunkAPI) => {\n  let {\n    noteText,\n    ticketId\n  } = _ref;\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    // console.log(token);\n    return await noteService.createNotes(noteText, ticketId, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const noteSlice = createSlice({\n  name: 'note',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder\n    // get notes\n    .addCase(getNotes.pending, state => {\n      state.isLoading = true;\n    }).addCase(getNotes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.notes = action.payload;\n    }).addCase(getNotes.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    })\n    // create notes\n    .addCase(createNotes.pending, state => {\n      state.isLoading = true;\n    }).addCase(createNotes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.notes.push(action.payload);\n    }).addCase(createNotes.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","noteService","initialState","notes","isError","isSuccess","isLoading","message","getNotes","ticketId","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","createNotes","noteText","noteSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","push","actions","reducer"],"sources":["C:/Users/sandeep singh/Desktop/support_desk-support_desk/support_desk-support_desk/frontend/src/features/note/noteSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport noteService from './noteService';\nconst initialState = {\n    notes: [],\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: \"\"\n}\n\n// Get Ticket notes\nexport const getNotes = createAsyncThunk(\n    'notes/getAll',\n    async (ticketId, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().auth.user.token\n            // console.log(token);\n            return await noteService.getNotes(ticketId, token)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n// create Ticket notes\nexport const createNotes = createAsyncThunk(\n    'notes/create',\n    async ({ noteText, ticketId }, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().auth.user.token\n            // console.log(token);\n            return await noteService.createNotes(noteText, ticketId, token)\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n\nexport const noteSlice = createSlice({\n    name: 'note',\n    initialState,\n    reducers: {\n        reset: (state) => initialState\n    },\n    extraReducers: (builder) => {\n        builder\n            // get notes\n            .addCase(getNotes.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(getNotes.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.notes = action.payload\n            })\n            .addCase(getNotes.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n            // create notes\n            .addCase(createNotes.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(createNotes.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.notes.push(action.payload)\n            })\n            .addCase(createNotes.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n    }\n\n})\n\nexport const { reset } = noteSlice.actions\nexport default noteSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}